import { createAction, createActionGroup, emptyProps, props } from '@ngrx/store'
import { MockData } from '../../../../shared/models/mock-data.model'

export const increment = createAction('[Example Feature 1] Increment')
export const decrement = createAction('[Example Feature 1] Decrement')

export const addDataEntryActions = createActionGroup({
  source: 'Example Feature 1',
  events: {
    'Add Data Entry': props<{ mockDataEntry: MockData }>(),
    'Add Data Entry Success': props<{ mockDataEntry: MockData }>(),
    'Add Data Entry Failure': props<{ error: any }>(),
  },
})

export const loadMockDataEntriesActions = createActionGroup({
  source: 'Example Feature 1',
  events: {
    'Load Mock Data Entries': emptyProps(),
    'Load Mock Data Entries Success': props<{ mockDataEntries: MockData[] }>(),
    'Load Mock Data Entries Failure': props<{ error: any }>(),
  },
})

export const addSelection = createAction(
  '[Example Feature 1] Add selection',
  props<{ entryId: string }>()
)

{% if material -%}
export const addMissingToSelection = createAction(
  '[Example Feature 1] Add missing to selected entries',
)
{%- endif %}

export const removeSelection = createAction(
  '[Example Feature 1] Remove selection',
  props<{ entryId: string }>()
)

export const removeSelectedEntries = createAction(
  '[Example Feature 1] Remove selected Entries'
)

export const resetSelectedEntries = createAction(
  '[Example Feature 1] Reset selected Entries'
)
